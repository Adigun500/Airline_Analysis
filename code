/* 
Analysis of Airline data, we are analysing 8 tables of data
*/

-- List of cities in which there are no flight from moscow

SELECT DISTINCT a.city->>'en' AS city
FROM airports a
WHERE a.city->>'en'<>'Moscow'
ORDER BY city;

-- Take a look at airports in which the timezone is in Asia/Novokuznetsk and Asia/Krasnoyarsk

SELECT *
FROM airports
WHERE timezone = 'Asia / Novokuznetsk'AND timezone = 'Asia / Krasoyarsk'


SELECT *
FROM airports
WHERE timezone IN ('Asia / Novokuznetsk', 'Asia / Krasnoyarsk');


--Planes that have flight range in the range of 3,000km to 6,000km.

SELECT model->>'en' AS model, range
FROM aircrafts
WHERE range BETWEEN 3000 AND 6000;


-- Getting the model, range, and miles of every air craft, note that miles = range/1.609

SELECT model->>'en' AS model, range, ROUND(range/1.609,2) AS miles
FROM aircrafts;


-- Return all information about air craft that has aircraft_code = 'SU9' and its range in miles.

SELECT *, (range/1.609) AS range_in_miles
FROM aircrafts
WHERE aircraft_code = 'SU9';


-- Calculate the average ticket sales.

SELECT ROUND(AVG(amount)) AS avg_ticket_sales
FROM ticket_flights;


-- Return the number of seats in the aircraft that has aircraft code = 'CN1'

SELECT DISTINCT COUNT(seat_no)
FROM seats
WHERE aircraft_code = 'CN1';


-- Return the number of seats in the aircraft that has aircraft_code = 'SU9'

SELECT DISTINCT COUNT(seat_no)
FROM seats
WHERE aircraft_code = 'SU9';


-- Aircraft code and the number of seats of each aircraft in ascending order.

SELECT aircraft_code, COUNT(seat_no)
FROM seats
GROUP BY 1
ORDER BY 2 ASC;


/*
Calculating the number of seats in the salons for all aircraft models,taking into account 
the class of service business class and class.
*/

SELECT aircraft_code, fare_conditions, count (seat_no) AS class_count
FROM seats
GROUP BY 1,2
ORDER BY 1,2;


-- What was the least day in tickets sales

SELECT min (total_amount)
FROM bookings;

SELECT book_date, min(total_amount) AS sales
FROM bookings
GROUP BY 1
ORDER BY 2
LIMIT 1;


/*
Determine how many flights from each city to other cities, return the the name of city 
and count of flights more than 50 order the data from the largest no of flights to the least
*/

SELECT (SELECT city ->> 'en' FROM airports WHERE airport_code =departure_airport) AS departure_city, 
COUNT(*) AS no_flights
FROM flights
GROUP BY 1
HAVING count (*)>= 50
ORDER BY 2 DESC;


/*
Return all flight details in the indicated day 2017-08-28 include flight count ascending order 
and departures count and when departures happen in arrivals count and when arrivals happen
*/

SELECT f.flight_no,f.scheduled_departure :: time AS dep_time,
f.departure_airport AS departures,f.arrival_airport AS arrivals,
count (flight_id)AS flight_count
FROM flights f
WHERE f.departure_airport = 'KZN'
AND f.scheduled_departure >= '2017-08-28' :: date
AND f.scheduled_departure <'2017-08-29' :: date
GROUP BY 1,2,3,4,f.scheduled_departure
ORDER BY flight_count DESC,f.arrival_airport,f.scheduled_departure;


 /*
 write a query to arrange the range of model of air crafts so  Short range is less than 2000, 
 Middle range is more than 2000 and less than 5000 & any range above 5000 is long range
 */
 
 SELECT model->>'en' AS Model, range, CASE WHEN range <2000 THEN 'Short'
                                                   WHEN range <5000 THEN 'Middle'
                                                   ELSE 'Long '
                                                   END AS range_group
FROM aircrafts
ORDER BY 1;


/*
What is the shortest flight duration for each possible flight from Moscow to St. Petersburg, 
and how many times was the flight delayed for more than an hour
*/

SELECT f.flight_no, (f.Scheduled_arrival - f.Scheduled_departure) AS scheduled_duration,
min(f.Scheduled_arrival - f.Scheduled_departure), max(f.Scheduled_arrival - f.Scheduled_departure),
sum(CASE WHEN f.actual_departure > f.scheduled_departure + INTERVAL '1 hour'THEN 1 ELSE 0 END) delays
FROM flights f
WHERE (SELECT city ->> 'en' FROM airports WHERE airport_code = departure_airport) = 'Moscow'
AND (SELECT city ->> 'en' FROM airports WHERE airport_code = arrival_airport) = 'St. Petersburg'
AND f.status = 'Arrived'
GROUP BY f.flight_no, (f.Scheduled_arrival - f.Scheduled_departure);


/*
Who traveled from Moscow (SVO) to Novosibirsk (OVB) on seat 1A yesterday, 
and when was the ticket booked
*/

SELECT t.passenger_name, b.book_date
FROM bookings b
JOIN tickets t
ON t.book_ref = b.book_ref
JOIN boarding_passes bp
ON bp.ticket_no = t.ticket_no
JOIN flights f
ON f.flight_id = bp.flight_id
WHERE f.departure_airport = 'SVO' AND f.arrival_airport = 'OVB'
AND f.scheduled_departure::date = public.now()::date - INTERVAL '2 day'
AND bp.seat_no = '1A';


/*
Find the most disciplined passengers who checked in first for all their flights. 
Take into account only those passengers who took at least two flights
*/

SELECT t.passenger_name, t.ticket_no
FROM tickets t
JOIN boarding_passes bp
ON bp.ticket_no = t.ticket_no
GROUP BY t.passenger_name, t.ticket_no
HAVING max(bp.boarding_no) = 1 AND count(*) > 1;


/*
Calculate the number of passengers and number of flights departing from one airport (SVO) 
during each hour on the indicated day 2017-08-02 
*/

SELECT date_part ('hour', f.scheduled_departure) "hour",count (ticket_no) passengers_cnt,
count (DISTINCT f.flight_id) flights_cnt
FROM flights f
JOIN ticket_flights t ON f.flight_id = t.flight_id
WHERE f.departure_airport = 'SVO'
AND f.scheduled_departure >= '2017-08-02' :: date
AND f.scheduled_departure <'2017-08-03' :: date
GROUP BY date_part ('hour', f.scheduled_departure);


-- return unique city name, flight_no, airport and timezone

SELECT DISTINCT a.city, f.flight_no, a.airport_name AS airport, a.timezone
FROM flights f
JOIN airports a
ON a.airport_code = f.departure_airport;

-- How many people can be included into a single booking according to the available data

SELECT tt.bookings_no,count(*)passengers_no
FROM (SELECT t.book_ref, count(*) bookings_no FROM tickets t GROUP BY t.book_ref) tt
GROUP BY tt.bookings_no
ORDER BY tt.bookings_no;


/*
Which combinations of first and last names occur most often? What is the ratio of the 
passengers with such names to the total number of passengers
*/

SELECT passenger_name, round( 100.0 * cnt / sum(cnt) OVER (), 2) AS percent
FROM (SELECT passenger_name, count(*) cnt  FROM tickets GROUP BY passenger_name) sub
ORDER BY percent DESC;


-- What are the maximum and minimum ticket prices in all directions

SELECT 
(SELECT city ->> 'en' FROM airports WHERE airport_code = f.departure_airport) AS departure_city, 
(SELECT city ->> 'en' FROM airports WHERE airport_code = f.arrival_airport) AS arrival_city, 
max (tf.amount), min (tf.amount)
FROM flights f
JOIN ticket_flights tf
ON f.flight_id = tf.flight_id
GROUP BY 1, 2
ORDER BY 1, 2;

-- Get a list of airports in cities with more than one airport 

SELECT aa.city ->> 'en'AS city, aa.airport_code, aa.airport_name ->> 'en' AS airport
FROM (SELECT city, count (*)FROM airports GROUP BY city HAVING count (*)> 1) AS a
JOIN airports AS aa
ON a.city = aa.city
ORDER BY aa.city, aa.airport_name;


/*
What will be the total number of different routes that are theoretically can be 
laid between all cities
*/

SELECT count (*)
FROM (SELECT DISTINCT city FROM airports) AS a1
JOIN (SELECT DISTINCT city FROM airports) AS a2
ON a1.city <> a2.city;


-- Count the number of routes laid from the airports

CREATE VIEW cities AS SELECT 
(SELECT city ->> 'en' FROM airports WHERE airport_code =departure_airport) AS departure_city, 
(SELECT city ->> 'en' FROM airports WHERE airport_code =arrival_airport) AS arrival_city
FROM flights
 -- then add the following code:
SELECT departure_city, count (*)
FROM cities
GROUP BY departure_city
HAVING departure_city IN (SELECT city->> 'en' FROM airports )
ORDER BY count DESC;

/*
Suppose our airline marketers want to know how often there are different names 
among the passengers
*/

SELECT LEFT(passenger_name, STRPOS(passenger_name, ' ') - 1) AS firstname, COUNT (*)
FROM tickets
GROUP BY 1
ORDER BY 2 DESC;

/*
Which combinations of first names and last names separately occur most often,
What is the ratio of the passengers with such names to the total number of passengers
*/

WITH p AS (SELECT left(passenger_name, position(' ' IN passenger_name)) AS passenger_name FROM tickets)
SELECT passenger_name, round( 100.0 * cnt / sum(cnt) OVER (), 2) AS percent
FROM (SELECT passenger_name,count(*) cnt FROM p GROUP BY passenger_name) t
ORDER BY percent DESC;


/*
For each ticket, display all the included flight segments, together with connection time. 
Limit the result to the tickets booked a week ago
*/

SELECT tf.ticket_no, f.departure_airport, f.arrival_airport, f.scheduled_arrival,
lead(f.scheduled_departure) OVER w AS next_departure,
lead(f.scheduled_departure) OVER w - f.scheduled_arrival AS gap
FROM bookings b
JOIN tickets t
ON t.book_ref = b.book_ref
JOIN ticket_flights tf
ON tf.ticket_no = t.ticket_no
JOIN flights f
ON tf.flight_id = f.flight_id
WHERE b.book_date = public.now()::date - INTERVAL '7 day'
WINDOW w AS (PARTITION BY tf.ticket_no
 			ORDER BY f.scheduled_departure);
			

-- Which flights had the longest delays

SELECT f.flight_no,  f.scheduled_departure, f.actual_departure,
(f.actual_departure - f.scheduled_departure) AS delay
FROM  flights f
WHERE f.actual_departure IS NOT NULL
ORDER BY f.actual_departure - f.scheduled_departure ;


/*
How many seats remained free on flight PG0404 in the day before the 
last in the airlines database
*/

SELECT count(*)
FROM (SELECT s.seat_no FROM  seats s
  WHERE s.aircraft_code = (SELECT aircraft_code
   FROM  flights
   WHERE flight_no = 'PG0404'
   AND scheduled_departure::date = public.now()::date - INTERVAL '1 day')
      EXCEPT
      SELECT bp.seat_no
      FROM boarding_passes bp
      WHERE bp.flight_id = (SELECT flight_id
                                          FROM  flights                                     
                                  WHERE flight_no = 'PG0404'                                     
                                  AND scheduled_departure::date = public.now()::date - INTERVAL '1 day')) t; 


--How many seats remained free on flight PG0404 in the day before the last in the airlines database

SELECT count(*)
FROM flights f
JOIN seats s
ON s.aircraft_code = f.aircraft_code
WHERE f.flight_no = 'PG0404'
AND f.scheduled_departure::date = public.now()::date - INTERVAL '1 day'
AND NOT EXISTS (SELECT NULL FROM boarding_passes bp
WHERE bp.flight_id = f.flight_id
                                 AND bp.seat_no = s.seat_no);



